package main

import "fmt"

func main() {
	//go的字符串是由单个字节链接起来的
	//传统的字符串是由字符组成的 而go的字符串不同它是由字节组成的
	//golang中没有专门的字符类型 如果要存储单个字符 一般使用byte来保存
	//官方将string归属到基本数据类型

	var c1 byte = 'a'
	var c2 byte = '0'
	//这里输出的是对象的码值
	fmt.Printf("c1: %v\n", c1)
	fmt.Printf("c2: %v\n", c2)
	//如果希望输出对应字符串 需要格式化
	fmt.Printf("c1: %c\n", c1)
	fmt.Printf("c2: %c\n", c2)

	// var c3 byte = '北' //这个不能用 超长了 需要用int类型
	//这种写法真的好怪 不如直接编译阶段报错 如果是字符型 就不允许存储int
	var c3 int = '北'
	fmt.Printf("c3: %c\n", c3)

	//字符类型总结
	//1. 单引号括起来的单个字符叫字符常量
	//2. Go中允许使用转义字符 \来将其后的字符转变为特殊字符
	//3. Go语言的字符使用UTF-8编码 汉字-3/4个字节 utf-8mb4? 英文字母-1个字节
	//4. 再Go中字符的本质是一个整数  直接输出时 是该字符对应的UTF-8编码的码值
	//5. 可以直接赋值数字 然后按格式化输出 使用 %c即可格式化为对应unicode字符输出
	//6. 字符类型是可以进行运算的 相当于一个整数
}
